version: 1.0
applications:
  - appRoot: Apps/Web/arellsstore
    frontend:
      phases:
        preBuild:
          commands:
            - echo "üßπ Clearing build cache..."
            - rm -rf .next
            - rm -rf node_modules/.cache
            - rm -rf dist

            - echo "üîß Setting up Volta for Node & Yarn..."
            - curl -sSf https://get.volta.sh | bash
            - export VOLTA_HOME="$HOME/.volta"
            - export PATH="$VOLTA_HOME/bin:$PATH"
            - volta install node@20.11.1
            - volta install yarn@1.22.22
            - node -v && yarn -v

            - echo "üõ† Installing AWS CLI..."
            - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            - unzip awscliv2.zip
            - sudo ./aws/install
            - export PATH=$PATH:/usr/local/bin

            - echo "üîê Injecting secrets from AWS SSM..."

            - export ARELLS_PRIVATE_KEY=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/ARELLS_PRIVATE_KEY" --with-decryption --query Parameter.Value --output text)
            - export COGNITO_USER_POOL_ID=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/COGNITO_USER_POOL_ID" --query Parameter.Value --output text)
            - export DYNAMODB_ACCESS_KEY_ID=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/DYNAMODB_ACCESS_KEY_ID" --with-decryption --query Parameter.Value --output text)
            - export DYNAMODB_SECRET_ACCESS_KEY=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/DYNAMODB_SECRET_ACCESS_KEY" --with-decryption --query Parameter.Value --output text)
            - export DYNAMODB_TABLE_NAME=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/DYNAMODB_TABLE_NAME" --query Parameter.Value --output text)
            - export NEXTAUTH_SECRET=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/NEXTAUTH_SECRET" --with-decryption --query Parameter.Value --output text)
            - export NEXT_PUBLIC_AWS_ACCESS_KEY_ID=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/NEXT_PUBLIC_AWS_ACCESS_KEY_ID" --query Parameter.Value --output text)
            - export NEXT_PUBLIC_AWS_REGION=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/NEXT_PUBLIC_AWS_REGION" --query Parameter.Value --output text)
            - export NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/NEXT_PUBLIC_AWS_SECRET_ACCESS_KEY" --with-decryption --query Parameter.Value --output text)
            - export NEXT_PUBLIC_BASE_URL=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/NEXT_PUBLIC_BASE_URL" --query Parameter.Value --output text)
            - export NEXT_PUBLIC_COINGECKO_API_KEY=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/NEXT_PUBLIC_COINGECKO_API_KEY" --with-decryption --query Parameter.Value --output text)
            - export NEXT_PUBLIC_S3_BUCKET_NAME=$(aws ssm get-parameter --name "/amplify/dsd9y475h7ce2/main/NEXT_PUBLIC_S3_BUCKET_NAME" --query Parameter.Value --output text)

            - echo "üîç ENV Vars loaded from SSM:"
            - printenv | grep -i 'PRIVATE\|NEXT\|BASE\|DYNAMO\|AMPLIFY'

            - echo "üì¶ Installing dependencies..."
            - yarn install --frozen-lockfile

            - echo "üõ†Ô∏è Compiling Hardhat contracts..."
            - npx hardhat compile

        build:
          commands:
            - echo "üöÄ Building Next.js app..."
            - yarn run build

      artifacts:
        baseDirectory: .next
        files:
          - '**/*'

      cache:
        paths:
          # optional: remove cache reuse completely if needed
          # - node_modules/**/*
